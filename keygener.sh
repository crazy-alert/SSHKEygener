#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_question() {
    echo -e "${BLUE}[QUESTION]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
confirm_action() {
    local prompt="$1"
    local default="${2:-n}"
    
    if [[ "$default" == "y" ]]; then
        prompt="$prompt [Y/n] "
    else
        prompt="$prompt [y/N] "
    fi
    
    print_question "$prompt"
    read -r response
    
    case "$response" in
        [yY][eE][sS]|[yY]) 
            return 0
            ;;
        [nN][oO]|[nN])
            return 1
            ;;
        *)
            if [[ "$default" == "y" ]]; then
                return 0
            else
                return 1
            fi
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
send_to_telegram() {
    local bot_token="$1"
    local chat_id="$2"
    local public_key="$3"
    local key_owner="$4"
    local server_name="$5"
    
    local message="üîê *–ù–æ–≤—ã–π SSH –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω*

üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* \`$key_owner\`
üñ•Ô∏è *–°–µ—Ä–≤–µ—Ä:* \`$server_name\`
üìÖ *–î–∞—Ç–∞:* \`$(date +"%Y-%m-%d %H:%M:%S")\`

*–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:*
<code>$public_key</code>

‚ö†Ô∏è *–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!*"
    
    print_message "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram..."
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Markdown —Ä–∞–∑–º–µ—Ç–∫–æ–π
    local response=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -d "{
            \"chat_id\": \"$chat_id\",
            \"text\": \"$message\",
            \"parse_mode\": \"HTML\",
            \"disable_web_page_preview\": true
        }" \
        "https://api.telegram.org/bot$bot_token/sendMessage")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
    if echo "$response" | grep -q '"ok":true'; then
        print_message "‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram"
        return 0
    else
        local error_msg=$(echo "$response" | grep -o '"description":"[^"]*"' | cut -d'"' -f4)
        print_error "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: $error_msg"
        return 1
    fi
}

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
get_system_info() {
    local key_owner=$(whoami)
    local server_name=$(hostname)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if command -v hostname >/dev/null 2>&1 && hostname -f >/dev/null 2>&1; then
        server_name=$(hostname -f)
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    local public_ip=$(curl -s -4 ifconfig.co 2>/dev/null || curl -s -4 icanhazip.com 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
    
    echo "$key_owner" "$server_name" "$public_ip"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -eq 0 ]]; then
    print_warning "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∫–ª—é—á –¥–ª—è root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    USER_HOME="/root"
else
    USER_HOME="$HOME"
fi

SSH_DIR="$USER_HOME/.ssh"
KEY_FILE="$SSH_DIR/id_rsa"
KEY_FILE_PUB="$KEY_FILE.pub"
CONFIG_FILE="$SSH_DIR/config"
SSHD_CONFIG="/etc/ssh/sshd_config"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
read -r key_owner server_name public_ip <<< "$(get_system_info)"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é .ssh –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
print_message "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .ssh..."
mkdir -p "$SSH_DIR"
chmod 700 "$SSH_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
key_exists=false
if [[ -f "$KEY_FILE" && -f "$KEY_FILE_PUB" ]]; then
    print_warning "SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $KEY_FILE"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –∫–ª—é—á–µ
    print_message "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∫–ª—é—á–µ:"
    ssh-keygen -lf "$KEY_FILE_PUB"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª—é—á–∞
    key_comment=$(ssh-keygen -l -f "$KEY_FILE_PUB" | cut -d' ' -f3-)
    print_message "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª—é—á–∞: $key_comment"
    echo ""
    
    key_exists=true
elif [[ -f "$KEY_FILE" && ! -f "$KEY_FILE_PUB" ]]; then
    print_warning "–ù–∞–π–¥–µ–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π: $KEY_FILE"
    key_exists=true
elif [[ ! -f "$KEY_FILE" && -f "$KEY_FILE_PUB" ]]; then
    print_warning "–ù–∞–π–¥–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π: $KEY_FILE_PUB"
    key_exists=true
fi

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞
if [[ "$key_exists" == true ]]; then
    if confirm_action "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π SSH –∫–ª—é—á?" "n"; then
        # –°–æ–∑–¥–∞–µ–º backup —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞
        backup_dir="$SSH_DIR/backup_$(date +%Y%m%d_%H%M%S)"
        mkdir -p "$backup_dir"
        
        if [[ -f "$KEY_FILE" ]]; then
            cp "$KEY_FILE" "$backup_dir/"
            print_message "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $backup_dir/$(basename "$KEY_FILE")"
        fi
        
        if [[ -f "$KEY_FILE_PUB" ]]; then
            cp "$KEY_FILE_PUB" "$backup_dir/"
            print_message "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $backup_dir/$(basename "$KEY_FILE_PUB")"
        fi
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏
        rm -f "$KEY_FILE" "$KEY_FILE_PUB"
        print_message "–°—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ —É–¥–∞–ª–µ–Ω—ã."
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
        print_message "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SSH –∫–ª—é—á–∞..."
        ssh-keygen -t rsa -b 4096 -f "$KEY_FILE" -N "" -C "$key_owner@$server_name-$(date +%Y%m%d)"
        
    else
        print_message "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π SSH –∫–ª—é—á."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∫–ª—é—á–∞
        if [[ -f "$KEY_FILE" && -f "$KEY_FILE_PUB" ]]; then
            print_message "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–ª—é—á–∞..."
            if ssh-keygen -l -f "$KEY_FILE" >/dev/null 2>&1 && ssh-keygen -l -f "$KEY_FILE_PUB" >/dev/null 2>&1; then
                print_message "–ö–ª—é—á –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏."
            else
                print_error "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–ª—é—á–æ–º. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å."
                exit 1
            fi
        fi
    fi
else
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
    print_message "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SSH –∫–ª—é—á–∞..."
    ssh-keygen -t rsa -b 4096 -f "$KEY_FILE" -N "" -C "$key_owner@$server_name-$(date +%Y%m%d)"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
chmod 600 "$KEY_FILE"
chmod 644 "$KEY_FILE_PUB"

# –ß–∏—Ç–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
PUBLIC_KEY_CONTENT=$(cat "$KEY_FILE_PUB")

# –í—ã–≤–æ–¥–∏–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
print_message "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á:"
echo ""
echo "$PUBLIC_KEY_CONTENT"
echo ""

# –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ SSH –∫–ª–∏–µ–Ω—Ç–∞
print_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª–∏–µ–Ω—Ç–∞..."
cat > "$CONFIG_FILE" << EOF
Host *
    PubkeyAuthentication yes
    IdentitiesOnly yes
    ServerAliveInterval 60
    ServerAliveCountMax 3
EOF
chmod 600 "$CONFIG_FILE"

# –û—Ç–∫–ª—é—á–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –ø–∞—Ä–æ–ª—é (—Ç—Ä–µ–±—É–µ—Ç root)
if [[ $EUID -eq 0 ]]; then
    if confirm_action "–û—Ç–∫–ª—é—á–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –ø–∞—Ä–æ–ª—é –¥–ª—è SSH?" "n"; then
        print_message "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ –ø–∞—Ä–æ–ª—é..."
        
        # –°–æ–∑–¥–∞–µ–º backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        backup_file="${SSHD_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
        cp "$SSHD_CONFIG" "$backup_file"
        print_message "Backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: $backup_file"
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –ø–∞—Ä–æ–ª—é
        sed -i 's/^#*PasswordAuthentication.*/PasswordAuthentication no/' "$SSHD_CONFIG"
        sed -i 's/^#*ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/' "$SSHD_CONFIG"
        sed -i 's/^#*UsePAM.*/UsePAM no/' "$SSHD_CONFIG"
        sed -i 's/^#*PermitRootLogin.*/PermitRootLogin prohibit-password/' "$SSHD_CONFIG"
        
        # –í–∫–ª—é—á–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –∫–ª—é—á—É
        sed -i 's/^#*PubkeyAuthentication.*/PubkeyAuthentication yes/' "$SSHD_CONFIG"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if sshd -t -f "$SSHD_CONFIG"; then
            print_message "–°–∏–Ω—Ç–∞–∫—Å–∏—Å SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω."
            
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SSH —Å–µ—Ä–≤–µ—Ä
            print_message "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH —Å–µ—Ä–≤–µ—Ä–∞..."
            if systemctl is-active --quiet ssh; then
                systemctl restart ssh
            elif systemctl is-active --quiet sshd; then
                systemctl restart sshd
            else
                print_warning "SSH —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ systemd"
            fi
            
            print_warning "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ø–∞—Ä–æ–ª—é –û–¢–ö–õ–Æ–ß–ï–ù–ê!"
            print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ SSH –∫–ª—é—á—É –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º —Å–µ—Å—Å–∏–∏!"
        else
            print_error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SSH. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backup..."
            cp "$backup_file" "$SSHD_CONFIG"
            print_error "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é."
        fi
        
    else
        print_message "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ø–∞—Ä–æ–ª—é –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞."
    fi
else
    print_warning "–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ –ø–∞—Ä–æ–ª—é –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root"
    echo "sudo $0"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç
if command -v ssh-add >/dev/null 2>&1; then
    if confirm_action "–î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –≤ SSH –∞–≥–µ–Ω—Ç?" "y"; then
        print_message "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –≤ SSH –∞–≥–µ–Ω—Ç..."
        ssh-add "$KEY_FILE" 2>/dev/null && print_message "–ö–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ SSH –∞–≥–µ–Ω—Ç." || print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç"
    fi
fi

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª—é—á –≤ Telegram
if confirm_action "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ Telegram?" "n"; then
    print_message "–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª—é—á–∞ –≤ Telegram –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è:"
    echo "1. –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (—Å–æ–∑–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ @BotFather)"
    echo "2. ID —á–∞—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ @userinfobot)"
    echo ""
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    while true; do
        print_question "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram:"
        read -r bot_token
        
        if [[ -z "$bot_token" ]]; then
            print_error "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."
            continue
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ (–ø—Ä–∏–º–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
        if [[ ! "$bot_token" =~ ^[0-9]+:[a-zA-Z0-9_-]+$ ]]; then
            print_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞. –ü—Ä–∏–º–µ—Ä: 1234567890:ABCdefGHIjklMnOpQRSTUvWXYZ"
            continue
        fi
        
        break
    done
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —á–∞—Ç–∞
    while true; do
        print_question "–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
        read -r chat_id
        
        if [[ -z "$chat_id" ]]; then
            print_error "ID —á–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."
            continue
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ (Telegram ID –æ–±—ã—á–Ω–æ —á–∏—Å–ª–æ–≤–æ–π)
        if [[ ! "$chat_id" =~ ^-?[0-9]+$ ]]; then
            print_error "ID —á–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: 123456789 –∏–ª–∏ -1001234567890 –¥–ª—è –≥—Ä—É–ø–ø"
            continue
        fi
        
        break
    done
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ Telegram
    send_to_telegram "$bot_token" "$chat_id" "$PUBLIC_KEY_CONTENT" "$key_owner" "$server_name"
  
fi

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
print_message "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤—ã—à–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã:"
echo "   ssh-copy-id -i $KEY_FILE user@hostname"
echo ""
echo "2. –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   ssh -i $KEY_FILE user@hostname"
echo ""
echo "3. –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Host –≤ —Ñ–∞–π–ª–µ $CONFIG_FILE"
echo ""
echo "4. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: $KEY_FILE"
echo "5. –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: $KEY_FILE_PUB"

print_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
